# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/pylogue',
                'doc_host': 'https://sizhky.github.io',
                'git_url': 'https://github.com/sizhky/pylogue.git',
                'lib_path': 'src/pylogue'},
  'syms': { 'pylogue.cards': { 'pylogue.cards.ChatCard': ('0-card.html#chatcard', 'pylogue/cards.py'),
                               'pylogue.cards.ChatCard.__call__': ('0-card.html#chatcard.__call__', 'pylogue/cards.py'),
                               'pylogue.cards.ChatCard.__init__': ('0-card.html#chatcard.__init__', 'pylogue/cards.py'),
                               'pylogue.cards.ChatCard._get_role_style': ('0-card.html#chatcard._get_role_style', 'pylogue/cards.py'),
                               'pylogue.cards.ChatCard._get_style': ('0-card.html#chatcard._get_style', 'pylogue/cards.py'),
                               'pylogue.cards.ChatCard._get_text_color': ('0-card.html#chatcard._get_text_color', 'pylogue/cards.py'),
                               'pylogue.cards.ChatCard.get_mobile_styles': ('0-card.html#chatcard.get_mobile_styles', 'pylogue/cards.py'),
                               'pylogue.cards.ChatCard.render': ('0-card.html#chatcard.render', 'pylogue/cards.py'),
                               'pylogue.cards.mk_inp': ('0-card.html#mk_inp', 'pylogue/cards.py'),
                               'pylogue.cards.render_chat_list': ('0-card.html#render_chat_list', 'pylogue/cards.py')},
            'pylogue.chat': { 'pylogue.chat.create_chat_app': ('1-chat.html#create_chat_app', 'pylogue/chat.py'),
                              'pylogue.chat.echo_responder': ('1-chat.html#echo_responder', 'pylogue/chat.py'),
                              'pylogue.chat.get_initial_messages': ('1-chat.html#get_initial_messages', 'pylogue/chat.py'),
                              'pylogue.chat.on_conn': ('1-chat.html#on_conn', 'pylogue/chat.py'),
                              'pylogue.chat.on_disconn': ('1-chat.html#on_disconn', 'pylogue/chat.py')},
            'pylogue.chatapp': { 'pylogue.chatapp.ChatApp': ('4-chatapp.html#chatapp', 'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatApp.__init__': ('4-chatapp.html#chatapp.__init__', 'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatApp._create_fasthtml_app': ( '4-chatapp.html#chatapp._create_fasthtml_app',
                                                                                   'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatApp._get_initial_messages': ( '4-chatapp.html#chatapp._get_initial_messages',
                                                                                    'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatApp._handle_websocket_message': ( '4-chatapp.html#chatapp._handle_websocket_message',
                                                                                        'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatApp._on_connect': ('4-chatapp.html#chatapp._on_connect', 'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatApp._on_disconnect': ('4-chatapp.html#chatapp._on_disconnect', 'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatApp._register_routes': ( '4-chatapp.html#chatapp._register_routes',
                                                                               'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatApp.get_app': ('4-chatapp.html#chatapp.get_app', 'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatApp.run': ('4-chatapp.html#chatapp.run', 'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatAppConfig': ('4-chatapp.html#chatappconfig', 'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatAppConfig.get_default_initial_messages': ( '4-chatapp.html#chatappconfig.get_default_initial_messages',
                                                                                                 'pylogue/chatapp.py'),
                                 'pylogue.chatapp.ChatAppConfig.get_spinner_style': ( '4-chatapp.html#chatappconfig.get_spinner_style',
                                                                                      'pylogue/chatapp.py'),
                                 'pylogue.chatapp.create_default_chat_app': ( '4-chatapp.html#create_default_chat_app',
                                                                              'pylogue/chatapp.py'),
                                 'pylogue.chatapp.example_responder': ('4-chatapp.html#example_responder', 'pylogue/chatapp.py')},
            'pylogue.health': {},
            'pylogue.renderer': { 'pylogue.renderer.ChatRenderer': ('3-renderer.html#chatrenderer', 'pylogue/renderer.py'),
                                  'pylogue.renderer.ChatRenderer.__init__': ( '3-renderer.html#chatrenderer.__init__',
                                                                              'pylogue/renderer.py'),
                                  'pylogue.renderer.ChatRenderer.render_form': ( '3-renderer.html#chatrenderer.render_form',
                                                                                 'pylogue/renderer.py'),
                                  'pylogue.renderer.ChatRenderer.render_input': ( '3-renderer.html#chatrenderer.render_input',
                                                                                  'pylogue/renderer.py'),
                                  'pylogue.renderer.ChatRenderer.render_message': ( '3-renderer.html#chatrenderer.render_message',
                                                                                    'pylogue/renderer.py'),
                                  'pylogue.renderer.ChatRenderer.render_messages': ( '3-renderer.html#chatrenderer.render_messages',
                                                                                     'pylogue/renderer.py'),
                                  'pylogue.renderer.ChatRenderer.render_messages_from_dicts': ( '3-renderer.html#chatrenderer.render_messages_from_dicts',
                                                                                                'pylogue/renderer.py')},
            'pylogue.service': { 'pylogue.service.ChatService': ('2-service.html#chatservice', 'pylogue/service.py'),
                                 'pylogue.service.ChatService.__init__': ('2-service.html#chatservice.__init__', 'pylogue/service.py'),
                                 'pylogue.service.ChatService._is_async_generator': ( '2-service.html#chatservice._is_async_generator',
                                                                                      'pylogue/service.py'),
                                 'pylogue.service.ChatService.process_message': ( '2-service.html#chatservice.process_message',
                                                                                  'pylogue/service.py'),
                                 'pylogue.service.ChatService.process_message_stream': ( '2-service.html#chatservice.process_message_stream',
                                                                                         'pylogue/service.py'),
                                 'pylogue.service.ChatService.process_session_message': ( '2-service.html#chatservice.process_session_message',
                                                                                          'pylogue/service.py'),
                                 'pylogue.service.ContextAwareResponder': ('2-service.html#contextawareresponder', 'pylogue/service.py'),
                                 'pylogue.service.ContextAwareResponder.__call__': ( '2-service.html#contextawareresponder.__call__',
                                                                                     'pylogue/service.py'),
                                 'pylogue.service.ContextAwareResponder.__init__': ( '2-service.html#contextawareresponder.__init__',
                                                                                     'pylogue/service.py'),
                                 'pylogue.service.DefaultErrorHandler': ('2-service.html#defaulterrorhandler', 'pylogue/service.py'),
                                 'pylogue.service.DefaultErrorHandler.__call__': ( '2-service.html#defaulterrorhandler.__call__',
                                                                                   'pylogue/service.py'),
                                 'pylogue.service.DefaultErrorHandler.__init__': ( '2-service.html#defaulterrorhandler.__init__',
                                                                                   'pylogue/service.py'),
                                 'pylogue.service.ErrorHandler': ('2-service.html#errorhandler', 'pylogue/service.py'),
                                 'pylogue.service.ErrorHandler.__call__': ('2-service.html#errorhandler.__call__', 'pylogue/service.py'),
                                 'pylogue.service.Responder': ('2-service.html#responder', 'pylogue/service.py'),
                                 'pylogue.service.Responder.__call__': ('2-service.html#responder.__call__', 'pylogue/service.py'),
                                 'pylogue.service.echo_responder': ('2-service.html#echo_responder', 'pylogue/service.py')},
            'pylogue.session': { 'pylogue.session.ChatSession': ('1-session.html#chatsession', 'pylogue/session.py'),
                                 'pylogue.session.ChatSession.__init__': ('1-session.html#chatsession.__init__', 'pylogue/session.py'),
                                 'pylogue.session.ChatSession.__len__': ('1-session.html#chatsession.__len__', 'pylogue/session.py'),
                                 'pylogue.session.ChatSession.add_message': ( '1-session.html#chatsession.add_message',
                                                                              'pylogue/session.py'),
                                 'pylogue.session.ChatSession.clear': ('1-session.html#chatsession.clear', 'pylogue/session.py'),
                                 'pylogue.session.ChatSession.get_message_dicts': ( '1-session.html#chatsession.get_message_dicts',
                                                                                    'pylogue/session.py'),
                                 'pylogue.session.ChatSession.get_messages': ( '1-session.html#chatsession.get_messages',
                                                                               'pylogue/session.py'),
                                 'pylogue.session.ChatSession.remove_message': ( '1-session.html#chatsession.remove_message',
                                                                                 'pylogue/session.py'),
                                 'pylogue.session.ChatSession.update_message': ( '1-session.html#chatsession.update_message',
                                                                                 'pylogue/session.py'),
                                 'pylogue.session.InMemorySessionManager': ('1-session.html#inmemorysessionmanager', 'pylogue/session.py'),
                                 'pylogue.session.InMemorySessionManager.__init__': ( '1-session.html#inmemorysessionmanager.__init__',
                                                                                      'pylogue/session.py'),
                                 'pylogue.session.InMemorySessionManager.__len__': ( '1-session.html#inmemorysessionmanager.__len__',
                                                                                     'pylogue/session.py'),
                                 'pylogue.session.InMemorySessionManager.create_session': ( '1-session.html#inmemorysessionmanager.create_session',
                                                                                            'pylogue/session.py'),
                                 'pylogue.session.InMemorySessionManager.delete_session': ( '1-session.html#inmemorysessionmanager.delete_session',
                                                                                            'pylogue/session.py'),
                                 'pylogue.session.InMemorySessionManager.get_session': ( '1-session.html#inmemorysessionmanager.get_session',
                                                                                         'pylogue/session.py'),
                                 'pylogue.session.InMemorySessionManager.list_sessions': ( '1-session.html#inmemorysessionmanager.list_sessions',
                                                                                           'pylogue/session.py'),
                                 'pylogue.session.Message': ('1-session.html#message', 'pylogue/session.py'),
                                 'pylogue.session.Message.__post_init__': ('1-session.html#message.__post_init__', 'pylogue/session.py'),
                                 'pylogue.session.Message.from_dict': ('1-session.html#message.from_dict', 'pylogue/session.py'),
                                 'pylogue.session.Message.to_dict': ('1-session.html#message.to_dict', 'pylogue/session.py'),
                                 'pylogue.session.SessionManager': ('1-session.html#sessionmanager', 'pylogue/session.py'),
                                 'pylogue.session.SessionManager.create_session': ( '1-session.html#sessionmanager.create_session',
                                                                                    'pylogue/session.py'),
                                 'pylogue.session.SessionManager.delete_session': ( '1-session.html#sessionmanager.delete_session',
                                                                                    'pylogue/session.py'),
                                 'pylogue.session.SessionManager.get_session': ( '1-session.html#sessionmanager.get_session',
                                                                                 'pylogue/session.py'),
                                 'pylogue.session.SessionManager.list_sessions': ( '1-session.html#sessionmanager.list_sessions',
                                                                                   'pylogue/session.py')}}}
